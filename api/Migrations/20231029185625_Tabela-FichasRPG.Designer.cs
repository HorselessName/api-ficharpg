// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20231029185625_Tabela-FichasRPG")]
    partial class TabelaFichasRPG
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.24");

            modelBuilder.Entity("api.Models.FichaRpgModel", b =>
                {
                    b.Property<int>("IdFichaRpg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_ficha_rpg");

                    b.Property<string>("Alinhamento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("alinhamento");

                    b.Property<string>("Antecedente")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("antecedente");

                    b.Property<DateTime?>("DataAtualizado")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_atualizado");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_criacao");

                    b.Property<bool?>("Deletado")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletado");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.Property<string>("NomeDoJogador")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome_do_jogador");

                    b.Property<int>("Nível")
                        .HasColumnType("INTEGER")
                        .HasColumnName("nível");

                    b.Property<int>("PontosDeExperiência")
                        .HasColumnType("INTEGER")
                        .HasColumnName("pontos_de_experiência");

                    b.Property<string>("Raça")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("raça");

                    b.HasKey("IdFichaRpg")
                        .HasName("pk_fichas_rpg");

                    b.HasIndex("IdUsuario")
                        .HasDatabaseName("ix_fichas_rpg_id_usuario");

                    b.ToTable("fichas_rpg", (string)null);
                });

            modelBuilder.Entity("api.Models.UsuarioModel", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_usuario");

                    b.Property<DateTime?>("DataAtualizado")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_atualizado");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_criacao");

                    b.Property<bool?>("Deletado")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletado");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("IdUsuario")
                        .HasName("pk_usuarios");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("api.Models.FichaRpgModel", b =>
                {
                    b.HasOne("api.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_fichas_rpg_usuarios_id_usuario");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
